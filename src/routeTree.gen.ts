/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WarrantyImport } from './routes/warranty'
import { Route as ReportImport } from './routes/report'
import { Route as DetectionImport } from './routes/detection'
import { Route as CarsImport } from './routes/cars'
import { Route as IndexImport } from './routes/index'
import { Route as MagazinesIdImport } from './routes/magazines.$id'

// Create/Update Routes

const WarrantyRoute = WarrantyImport.update({
  path: '/warranty',
  getParentRoute: () => rootRoute,
} as any)

const ReportRoute = ReportImport.update({
  path: '/report',
  getParentRoute: () => rootRoute,
} as any)

const DetectionRoute = DetectionImport.update({
  path: '/detection',
  getParentRoute: () => rootRoute,
} as any)

const CarsRoute = CarsImport.update({
  path: '/cars',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const MagazinesIdRoute = MagazinesIdImport.update({
  path: '/magazines/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/cars': {
      id: '/cars'
      path: '/cars'
      fullPath: '/cars'
      preLoaderRoute: typeof CarsImport
      parentRoute: typeof rootRoute
    }
    '/detection': {
      id: '/detection'
      path: '/detection'
      fullPath: '/detection'
      preLoaderRoute: typeof DetectionImport
      parentRoute: typeof rootRoute
    }
    '/report': {
      id: '/report'
      path: '/report'
      fullPath: '/report'
      preLoaderRoute: typeof ReportImport
      parentRoute: typeof rootRoute
    }
    '/warranty': {
      id: '/warranty'
      path: '/warranty'
      fullPath: '/warranty'
      preLoaderRoute: typeof WarrantyImport
      parentRoute: typeof rootRoute
    }
    '/magazines/$id': {
      id: '/magazines/$id'
      path: '/magazines/$id'
      fullPath: '/magazines/$id'
      preLoaderRoute: typeof MagazinesIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/cars': typeof CarsRoute
  '/detection': typeof DetectionRoute
  '/report': typeof ReportRoute
  '/warranty': typeof WarrantyRoute
  '/magazines/$id': typeof MagazinesIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/cars': typeof CarsRoute
  '/detection': typeof DetectionRoute
  '/report': typeof ReportRoute
  '/warranty': typeof WarrantyRoute
  '/magazines/$id': typeof MagazinesIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/cars': typeof CarsRoute
  '/detection': typeof DetectionRoute
  '/report': typeof ReportRoute
  '/warranty': typeof WarrantyRoute
  '/magazines/$id': typeof MagazinesIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/cars'
    | '/detection'
    | '/report'
    | '/warranty'
    | '/magazines/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/cars' | '/detection' | '/report' | '/warranty' | '/magazines/$id'
  id:
    | '__root__'
    | '/'
    | '/cars'
    | '/detection'
    | '/report'
    | '/warranty'
    | '/magazines/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CarsRoute: typeof CarsRoute
  DetectionRoute: typeof DetectionRoute
  ReportRoute: typeof ReportRoute
  WarrantyRoute: typeof WarrantyRoute
  MagazinesIdRoute: typeof MagazinesIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CarsRoute: CarsRoute,
  DetectionRoute: DetectionRoute,
  ReportRoute: ReportRoute,
  WarrantyRoute: WarrantyRoute,
  MagazinesIdRoute: MagazinesIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/cars",
        "/detection",
        "/report",
        "/warranty",
        "/magazines/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/cars": {
      "filePath": "cars.tsx"
    },
    "/detection": {
      "filePath": "detection.tsx"
    },
    "/report": {
      "filePath": "report.tsx"
    },
    "/warranty": {
      "filePath": "warranty.tsx"
    },
    "/magazines/$id": {
      "filePath": "magazines.$id.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
